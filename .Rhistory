theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(x="", y="")+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=even.cld_beetle, aes(y = 1.2, label = .group))
evenness.plot_beetle
#Mush order plots together
library(ggpubr)
beetlefigure <- ggarrange(richness.plot_beetle, abundance.plot_beetle, diversity.plot_beetle, evenness.plot_beetle,
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2,
common.legend = TRUE, legend = "bottom")
pdf("beetle.pdf", height=6, width=8) #height and width in inches
beetlefigure
dev.off()
beetlefigure
orderfigure <- ggarrange(richness.plot_order, abundance.plot_order, diversity.plot_order, evenness.plot_order,
ncol = 4, nrow = 1)
orderfigure
#b - functional
functionalfigure <- ggarrange(richness.plot, abundance.plot, diversity.plot, evenness.plot,
ncol = 4, nrow = 1)
functionalfigure
#c - beetle
beetlefigure <- ggarrange(richness.plot_beetle, abundance.plot_beetle, diversity.plot_beetle, evenness.plot_beetle,
ncol = 4, nrow = 1,
common.legend = TRUE, legend = "bottom")
beetlefigure
figure3 <- ggarrange(orderfigure, functionalfigure, beetlefigure,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3,
common.legend = TRUE, legend = "bottom")
pdf("Figure 3.pdf", height=10, width=15) #height and width in inches
figure3
dev.off()
figure3
figure4 <- ggarrange(abundance.plot_flying, abundance.plot_crawling,abundance.plot_intermediate,richness.plot_flying,richness.plot_crawling,richness.plot_intermediate,
labels = c("A", "B", "C", "D", "E", "F"),
ncol = 3, nrow = 2,
common.legend = TRUE, legend = "bottom")
figure4
pdf("Figure 4.pdf", height=6, width=8) #height and width in inches
figure4
dev.off()
figure4 <- ggarrange(abundance.plot_flying, abundance.plot_crawling,abundance.plot_intermediate,richness.plot_flying,richness.plot_crawling,richness.plot_intermediate,
labels = c("A", "B", "C", "D", "E", "F"),
ncol = 3, nrow = 2,
common.legend = TRUE, legend = "bottom")
figure4
pdf("Figure 4.pdf", height=6, width=8) #height and width in inches
figure4
dev.off()
figure5 <- ggarrange(order_accum, functional_accum, beetle_accum,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3,
common.legend = TRUE, legend = "bottom")
figure5
pdf("Figure 5.pdf", height=6, width=6) #height and width in inches
figure5
dev.off()
#Figure 4 - flying vs crawling (functional level)
figure4 <- ggarrange(abundance.plot_flying, abundance.plot_crawling,abundance.plot_intermediate,richness.plot_flying,richness.plot_crawling,richness.plot_intermediate,
labels = c("A", "B", "C", "D", "E", "F"),
ncol = 3, nrow = 2,
common.legend = TRUE, legend = "bottom")
figure4
#Figure 4 - flying vs crawling (functional level)
figure4 <- ggarrange(abundance.plot_flying, abundance.plot_crawling,abundance.plot_intermediate,richness.plot_flying,richness.plot_crawling,richness.plot_intermediate,
labels = c("A", "B", "C", "D", "E", "F"),
ncol = 3, nrow = 3,
common.legend = TRUE, legend = "bottom")
figure4
pdf("Figure 4.pdf", height=6, width=8) #height and width in inches
figure4
dev.off()
pitfall <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_pitfall_functional.csv",na.strings = NULL)
ramp <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_yellowramp_functional.csv",na.strings = NULL)
jar <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_jarramp_functional.csv",na.strings = NULL)
sticky <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_stickycard_functional.csv",na.strings = NULL)
taxa <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Functional%20taxa.csv")
#add trap type as a column on each data file
pitfall$Trap="pitfall"
ramp$Trap="ramp"
jar$Trap="jar"
sticky$Trap="sticky"
#combine data tables
library (plyr)
pitfallramp <- rbind.fill (pitfall, ramp)
pitfallrampjar <-rbind.fill (pitfallramp, jar)
insects <- rbind.fill (pitfallrampjar, sticky)
#############
#NMDS of insect community by functional classification between trap types
library (vegan)
#Create matrix of environmental variables
env.matrix<-insects[c(1:4,44)]
#create matrix of community variables
com.matrix<-insects[c(5:43)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100)
NMDS
stressplot(NMDS)
#stress=0.15
#functional classification NMDS visualization
#what taxa to display using "taxa"
flying_func<-as.vector(t(taxa[1,]))
flying_func<-flying_func[-1]
crawling_func<-as.vector(t(taxa[2,]))
crawling_func<-crawling_func[-1]
intermediate_func<-as.vector(t(taxa[3,]))
intermediate_func<-intermediate_func[-1]
include_func<-as.vector(t(taxa[4,]))
include_func<-include_func[-1]
#plot functional NMDS
plot(NMDS, disp='sites', type="n")
title(main="Functional", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$Trap=="jar"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS, display="sites", select=which(env.matrix$Trap=="sticky"), pch=25, col="#CC79A7")
#add legend
#legend(1.0,1.51, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
#add insect taxa as text
ordilabel(NMDS, display="species", select =which (include_func==TRUE & crawling_func == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS, display="species", select =which (include_func==TRUE & flying_func == TRUE), cex=0.6, col="white", fill="black")
ordilabel(NMDS, display="species", select =which (include_func==TRUE & intermediate_func == TRUE), cex=0.6, col="black", fill="gray")
fit<-adonis(com.matrix ~ Trap, data = env.matrix, permutations = 999, method="bray")
fit
#P-value = 0.001
#check assumption of homogeneity of multivariate dispersion
#P-value greater than 0.05 means assumption has been met
distances_data<-vegdist(com.matrix)
anova(betadisper(distances_data, env.matrix$Trap))
#P-value = .0001 -- cannot assume homogeneity of multivariate dispersion
################
#calculate Abundance
insects.abun <- rowSums(insects[,5:43])
insects$abundance <- insects.abun
#calculate Richness
insects.rowsums <- rowSums(insects[,5:43]>0)
insects$richness <- insects.rowsums
#calculate Shannon diversity
diversity <-diversity(insects[,5:43])
insects$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(insects[,5:43]))
insects$evenness <- evenness
#######
#Mixed effects models
library(lme4)
library(lmerTest) #to obtain p values
library (emmeans) #for pairwise comparisons
library (multcompView) #to view letters
#richness
##AIC 716
richness.model<-lmer(richness ~ Trap + Date + (1 | Site) + (1 | Site:Replicate), data=insects)
summary(richness.model)
anova(richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~Trap)
rich.emm
#results: jar-pitfall no sig diff (0.0543), sig dif btw all others
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
#abundance
##AIC 1797
abundance.model<-lmer(abundance ~ Trap + Date + (1 | Site) + (1 | Site:Replicate), data=insects)
summary(abundance.model)
anova(abundance.model)
AIC(abundance.model)
#pairwise comparison
abun.emm<-emmeans(abundance.model,pairwise~Trap)
abun.emm
#results: jar-pitfall no sig diff (0.8089), sig dif btw all others
abun.cld<-multcomp::cld(abun.emm, alpha = 0.05, Letters = LETTERS)
abun.cld
#diversity
##AIC 176 (152 w/o Date)
diversity.model<-lmer(diversity ~ Trap + Date + (1 | Site) + (1 | Site:Replicate), data=insects)
summary(diversity.model)
anova(diversity.model) #date is not significant
AIC(diversity.model)
#pairwise comparison
div.emm<-emmeans(diversity.model,pairwise~Trap)
div.emm
#results: no sig diff btw jar-pitfall (0.1990), jar-sticky (0.9537), pitfall-sticky (0.0649); sig diff btw all others
div.cld<-multcomp::cld(div.emm, alpha = 0.05, Letters = LETTERS)
div.cld
#evenness
##AIC -167 (-193 w/o Date)
evenness.model<-lmer(evenness ~ Trap + Date + (1 | Site) + (1 | Site:Replicate), data=insects)
summary(evenness.model)
anova(evenness.model)
AIC(evenness.model)
#pairwise comparison
even.emm<-emmeans(evenness.model,pairwise~Trap)
even.emm
#results: no sig diff btw jar-pitfall (0.2855) or ramp-sticky (0.0928); sig diff btw all others
even.cld<-multcomp::cld(even.emm, alpha = 0.05, Letters = LETTERS)
even.cld
###########
library(ggplot2)
#abundance plot
abundance.plot<-ggplot(insects, aes(x =Trap, y = abundance, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(x="", y="")+
scale_y_continuous(trans="log10")+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=abun.cld, aes(y = 600, label = .group))
abundance.plot
#richness plot
richness.plot<-ggplot(insects, aes(x =Trap, y = richness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(x="", y="")+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=rich.cld, aes(y = 25, label = .group))
richness.plot
#diversity plot
diversity.plot<-ggplot(insects, aes(x =Trap, y = diversity, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(x="", y="")+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=div.cld, aes(y = 2.5, label = .group))
diversity.plot
#evenness plot
evenness.plot<-ggplot(insects, aes(x =Trap, y = evenness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(x="", y="")+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=even.cld, aes(y = 1.2, label = .group))
evenness.plot
#Mush order plots together
library(ggpubr)
functionalfigure <- ggarrange(richness.plot, abundance.plot, diversity.plot, evenness.plot,
labels = c("E", "F", "G", "H"),
ncol = 2, nrow = 2,
common.legend = TRUE, legend = "bottom")
pdf("functional.pdf", height=6, width=8) #height and width in inches
functionalfigure
dev.off()
flying<-read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/flying.csv")
crawling<-read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/crawling.csv")
intermediate<-read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/intermediate.csv")
#calculating abundance for flying
flying.abun <- rowSums(flying[,2:23])
flying$abundance <- flying.abun
#calculating abundance for crawling
crawling.abun <- rowSums(crawling[,2:6])
crawling$abundance <- crawling.abun
#calculating abundance for intermediate
intermediate.abun <- rowSums(intermediate[,2:11])
intermediate$abundance <- intermediate.abun
#calculating richness for flying
flying.rich <- rowSums(flying[,2:23]>0)
flying$richness <- flying.rich
#calculating richness for crawling
crawling.rich <- rowSums(crawling[,2:6]>0)
crawling$richness <- crawling.rich
#calculating richness for intermediate
intermediate.rich <- rowSums(intermediate[,2:11]>0)
intermediate$richness <- intermediate.rich
abundance.model_flying<-lm(abundance ~ Trap, data=flying)
summary(abundance.model_flying)
anova(abundance.model_flying)
AIC(abundance.model_flying)
#pairwise comparison
abun_f.emm<-emmeans(abundance.model_flying,pairwise~Trap)
abun_f.emm
#results: no diff btw jar-pitfall and ramp-sticky
abun_f.cld<-multcomp::cld(abun_f.emm, alpha = 0.05, Letters = LETTERS)
abun_f.cld
#abundance model for crawling arthropods
#AIC = 1442
abundance.model_crawling<-lm(abundance ~ Trap, data=crawling)
summary(abundance.model_crawling)
anova(abundance.model_crawling)
AIC(abundance.model_crawling)
#pairwise comparison
abun_c.emm<-emmeans(abundance.model_crawling,pairwise~Trap)
abun_c.emm
#results: no diff btw jar-pitfall and pitfall-sticky
abun_c.cld<-multcomp::cld(abun_c.emm, alpha = 0.05, Letters = LETTERS)
abun_c.cld
#abundance model for intermediate arthropods
#AIC = 1725
abundance.model_intermediate<-lm(abundance ~ Trap, data=intermediate)
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
AIC(abundance.model_intermediate)
#pairwise comparison
abun_i.emm<-emmeans(abundance.model_intermediate,pairwise~Trap)
abun_i.emm
#results: no diff btw jar-pitfall, jar-sticky, or pitfall-sticky
abun_i.cld<-multcomp::cld(abun_i.emm, alpha = 0.05, Letters = LETTERS)
abun_i.cld
#richness model for flying arthropods
#AIC = 591
richness.model_flying<-lm(richness ~ Trap, data=flying)
summary(richness.model_flying)
anova(richness.model_flying)
AIC(richness.model_flying)
#pairwise comparison
rich_f.emm<-emmeans(richness.model_flying,pairwise~Trap)
rich_f.emm
#results: diff btw all
rich_f.cld<-multcomp::cld(rich_f.emm, alpha = 0.05, Letters = LETTERS)
rich_f.cld
#richness model for crawling arthropods
#AIC = 447
richness.model_crawling<-lm(richness ~ Trap, data=crawling)
summary(richness.model_crawling)
anova(richness.model_crawling)
AIC(richness.model_crawling)
#pairwise comparison
rich_c.emm<-emmeans(richness.model_crawling,pairwise~Trap)
rich_c.emm
#results: no diff btw jar-pitfall
rich_c.cld<-multcomp::cld(rich_c.emm, alpha = 0.05, Letters = LETTERS)
rich_c.cld
#richness model for intermediate arthropods
#AIC = 438
richness.model_intermediate<-lm(richness ~ Trap, data=intermediate)
summary(richness.model_intermediate)
anova(richness.model_intermediate)
AIC(richness.model_intermediate)
#pairwise comparison
rich_i.emm<-emmeans(richness.model_intermediate,pairwise~Trap)
rich_i.emm
#results: no diff btw jar-pitfall or jar-sticky
rich_i.cld<-multcomp::cld(rich_i.emm, alpha = 0.05, Letters = LETTERS)
rich_i.cld
abundance.plot_flying<-ggplot(flying, aes(x =Trap, y = abundance, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="Flying", x="", y="Abundance (log10)")+
scale_y_continuous(trans="log10")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=abun_f.cld, aes(y = 600, label = .group))
abundance.plot_flying
##plot crawling abundance
abundance.plot_crawling<-ggplot(crawling, aes(x =Trap, y = abundance, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="Crawling", x="", y="")+
scale_y_continuous(trans="log10")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=abun_c.cld, aes(y = 600, label = .group))
abundance.plot_crawling
##plot intermediate abundance
abundance.plot_intermediate<-ggplot(intermediate, aes(x =Trap, y = abundance, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="Intermediate", x="", y="")+
scale_y_continuous(trans="log10")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=abun_i.cld, aes(y = 600, label = .group))
abundance.plot_intermediate
##plot flying richness
richness.plot_flying<-ggplot(flying, aes(x =Trap, y = richness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="", x="", y="Richness")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=rich_f.cld, aes(y = 15, label = .group))
richness.plot_flying
##plot crawling richness
richness.plot_crawling<-ggplot(crawling, aes(x =Trap, y = richness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="", x="", y="")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=rich_c.cld, aes(y = 15, label = .group))
richness.plot_crawling
##plot intermediate richness
richness.plot_intermediate<-ggplot(intermediate, aes(x =Trap, y = richness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="", x="", y="")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=rich_i.cld, aes(y = 15, label = .group))
richness.plot_intermediate
#mush together
figure4 <- ggarrange(abundance.plot_flying,abundance.plot_crawling,abundance.plot_intermediate,richness.plot_flying,richness.plot_crawling,richness.plot_intermediate,
labels = c("A", "B", "C", "D", "E", "F"),
ncol = 3, nrow = 2,
common.legend = TRUE, legend = "bottom")
figure4
pdf("Figure 4.pdf", height=6, width=8) #height and width in inches
figure4
dev.off()
#abundance model for intermediate arthropods
#AIC = 1725
abundance.model_intermediate<-lm(abundance ~ Trap, data=intermediate)
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
AIC(abundance.model_intermediate)
#pairwise comparison
abun_i.emm<-emmeans(abundance.model_intermediate,pairwise~Trap)
abun_i.emm
richness.model_intermediate<-lm(richness ~ Trap, data=intermediate)
summary(richness.model_intermediate)
anova(richness.model_intermediate)
AIC(richness.model_intermediate)
#pairwise comparison
rich_i.emm<-emmeans(richness.model_intermediate,pairwise~Trap)
rich_i.emm
dotchart(ants$Richness, main = "Richness", group = ants$Treatment) # way to visualize outliers
dotchart(insects_order$Richness, main = "Richness", group = insects_order$Treatment) # way to visualize outliers
pitfall_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_pitfall_order.csv",na.strings = NULL)
ramp_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_yellowramp_order.csv",na.strings = NULL)
jar_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_jarramp_order.csv",na.strings = NULL)
sticky_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_stickycard_order.csv",na.strings = NULL)
taxa_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Order%20taxa.csv")
#add trap type as a column on each data file
pitfall_order$Trap="pitfall"
ramp_order$Trap="ramp"
jar_order$Trap="jar"
sticky_order$Trap="sticky"
#combine order data tables
library (plyr)
pitfallramp_order <- rbind.fill (pitfall_order, ramp_order)
pitfallrampjar_order <-rbind.fill (pitfallramp_order, jar_order)
insects_order <- rbind.fill (pitfallrampjar_order, sticky_order)
dotchart(insects_order$Richness, main = "Richness", group = insects_order$Treatment) # way to visualize outliers
dotchart(insects_order$Richness, main = "Richness", group = insects_order$Trap) # way to visualize outliers
if (!suppressWarnings(require(nortest))) install.packages("nortest")
citation("nortest")
with(insects_order, ad.test(Richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
insects.abun_order <- rowSums(insects_order[,5:16])
insects_order$abundance <- insects.abun_order
#calculate order Richness
insects.rowsums_order <- rowSums(insects_order[,5:16]>0)
insects_order$richness <- insects.rowsums_order
#calculate order Shannon diversity
diversity_order <-diversity(insects_order[,5:16])
insects_order$diversity <-diversity_order
#calculate order Evenness
evenness_order <-diversity_order/log(specnumber(insects_order[,5:16]))
insects_order$evenness <- evenness_order
dotchart(insects_order$Richness, main = "Richness", group = insects_order$Trap) # way to visualize outliers
with(insects_order, ad.test(Richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
dotchart(insects_order$richness, main = "richness", group = insects_order$Trap) # way to visualize outliers
with(insects_order, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
# I believe bartlett.test is in the base stats package
with(insects_order, bartlett.test(richness ~ Trap)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
# this model investigates the effects of vacant lot planting treatment on ant species richness
richness.model_order<-lmer(richness ~ Trap + Date + (1 | Site) + (1 | Site:Replicate), data=insects_order)
summary(richness.model_order)
anova(richness.model_order)
# Once you run the model, there are several ways to evaluate the model appropriateness
# I think these are the packages, let me know if something doesn't run
if (!suppressWarnings(require(bbmle))) install.packages("bbmle")
citation("bbmle")
if (!suppressWarnings(require(DHARMa))) install.packages("DHARMa")
citation("DHARMa")
plot(richness.model_order) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(richness.model_order))
qqline(resid(richness.model_order))
plot(simulateResiduals(richness.model_order)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(richness.model_order)) # check density estimate of the distribution of residuals
install.packages("lattice")
densityPlot(rstudent(richness.model_order)) # check density estimate of the distribution of residuals
# check for outliers influencing the data
outlierTest(richness.model_order)
dotchart(insects_order$richness, main = "richness", group = insects_order$Trap) # way to visualize outliers
with(insects_order, ad.test(richness)) #Anderson-darling test for normality (good for small sample sizes), low p-value means assumption is violated
# I believe bartlett.test is in the base stats package
with(insects_order, bartlett.test(richness ~ Trap)) #Bartlett test for homogeneity of variance, low p-value means assumption is violated
plot(richness.model_order) # check distribution of residuals
# check normality with these figures, are there outliers at either end
qqnorm(resid(richness.model_order))
qqline(resid(richness.model_order))
plot(simulateResiduals(richness.model_order)) # another way to check for normailty and homogeneity of variance
densityPlot(rstudent(richness.model_order)) # check density estimate of the distribution of residuals
