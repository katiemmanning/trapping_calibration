theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="", x="", y="Richness")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=rich_f.cld, aes(y = 15, label = .group))
richness.plot_flying
##plot crawling richness
richness.plot_crawling<-ggplot(crawling, aes(x =Trap, y = richness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="", x="", y="")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=rich_c.cld, aes(y = 15, label = .group))
richness.plot_crawling
#mush together
figure4 <- ggarrange(abundance.plot_flying, abundance.plot_crawling,richness.plot_flying,richness.plot_crawling,
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2,
common.legend = TRUE, legend = "bottom")
pdf("figure4.pdf", height=6, width=8) #height and width in inches
figure4
dev.off()
figure4
figure4 <- ggarrange(abundance.plot_flying, abundance.plot_crawling,richness.plot_flying,richness.plot_crawling,
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2,
common.legend = TRUE, legend = "bottom")
figure4
pdf("Figure 4.pdf", height=6, width=8) #height and width in inches
figure4
dev.off()
pitfall_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_pitfall_order.csv",na.strings = NULL)
ramp_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_yellowramp_order.csv",na.strings = NULL)
jar_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_jarramp_order.csv",na.strings = NULL)
sticky_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_stickycard_order.csv",na.strings = NULL)
taxa_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Order%20taxa.csv")
#add trap type as a column on each data file
pitfall_order$Trap="pitfall"
ramp_order$Trap="ramp"
jar_order$Trap="jar"
sticky_order$Trap="sticky"
#combine order data tables
library (plyr)
pitfallramp_order <- rbind.fill (pitfall_order, ramp_order)
pitfallrampjar_order <-rbind.fill (pitfallramp_order, jar_order)
insects_order <- rbind.fill (pitfallrampjar_order, sticky_order)
#############
#NMDS of insect community by order between trap types
library (vegan)
#Create matrix of environmental variables
env.matrix_order<-insects_order[c(1:3,16)]
#create matrix of community variables
com.matrix_order<-insects_order[c(4:15)]
#ordination by NMDS
NMDS_order<-metaMDS(com.matrix_order, distance="bray", k=2, autotransform=FALSE, trymax=100)
stressplot(NMDS_order)
#stress=0.14
#order NMDS visualization
#what taxa to display using "taxa"
flying<-as.vector(t(taxa_order[1,]))
flying<-flying[-1]
crawling<-as.vector(t(taxa_order[2,]))
crawling<-crawling[-1]
include<-as.vector(t(taxa_order[3,]))
include<-include[-1]
#plot order NMDS
plot(NMDS_order, disp='sites', type="n")
#add ellipsoids with ordiellipse
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="jar"), pch=17, col="#009E73")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="sticky"), pch=25, col="#CC79A7")
#add legend
legend(1.46,1.45, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
#add insect taxa as text
ordilabel(NMDS_order, display="species", select =which (include==TRUE & crawling == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS_order, display="species", select =which (include==TRUE & flying == TRUE), cex=0.6, col="white", fill="black")
View(taxa_order)
taxa_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Order%20taxa.csv")
#what taxa to display using "taxa"
flying<-as.vector(t(taxa_order[1,]))
flying<-flying[-1]
crawling<-as.vector(t(taxa_order[2,]))
crawling<-crawling[-1]
include<-as.vector(t(taxa_order[3,]))
include<-include[-1]
#plot order NMDS
plot(NMDS_order, disp='sites', type="n")
#add ellipsoids with ordiellipse
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="jar"), pch=17, col="#009E73")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="sticky"), pch=25, col="#CC79A7")
#add legend
legend(1.46,1.45, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
#add insect taxa as text
ordilabel(NMDS_order, display="species", select =which (include==TRUE & crawling == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS_order, display="species", select =which (include==TRUE & flying == TRUE), cex=0.6, col="white", fill="black")
taxa_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Order%20taxa.csv")
#add trap type as a column on each data file
pitfall_order$Trap="pitfall"
ramp_order$Trap="ramp"
jar_order$Trap="jar"
sticky_order$Trap="sticky"
#combine order data tables
library (plyr)
pitfallramp_order <- rbind.fill (pitfall_order, ramp_order)
pitfallrampjar_order <-rbind.fill (pitfallramp_order, jar_order)
insects_order <- rbind.fill (pitfallrampjar_order, sticky_order)
#############
#NMDS of insect community by order between trap types
library (vegan)
#Create matrix of environmental variables
env.matrix_order<-insects_order[c(1:3,16)]
#create matrix of community variables
com.matrix_order<-insects_order[c(4:15)]
#ordination by NMDS
NMDS_order<-metaMDS(com.matrix_order, distance="bray", k=2, autotransform=FALSE, trymax=100)
#what taxa to display using "taxa"
flying<-as.vector(t(taxa_order[1,]))
flying<-flying[-1]
crawling<-as.vector(t(taxa_order[2,]))
crawling<-crawling[-1]
include<-as.vector(t(taxa_order[3,]))
include<-include[-1]
#plot order NMDS
plot(NMDS_order, disp='sites', type="n")
#add ellipsoids with ordiellipse
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="jar"), pch=17, col="#009E73")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="sticky"), pch=25, col="#CC79A7")
#add legend
legend(1.46,1.45, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
#add insect taxa as text
ordilabel(NMDS_order, display="species", select =which (include==TRUE & crawling == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS_order, display="species", select =which (include==TRUE & flying == TRUE), cex=0.6, col="white", fill="black")
View(taxa_order)
taxa_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Order%20taxa.csv")
flying<-as.vector(t(taxa_order[1,]))
flying<-flying[-1]
crawling<-as.vector(t(taxa_order[2,]))
crawling<-crawling[-1]
include<-as.vector(t(taxa_order[3,]))
include<-include[-1]
plot(NMDS_order, disp='sites', type="n")
#add ellipsoids with ordiellipse
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="jar"), pch=17, col="#009E73")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="sticky"), pch=25, col="#CC79A7")
#add legend
legend(1.46,1.45, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
#add insect taxa as text
ordilabel(NMDS_order, display="species", select =which (include==TRUE & crawling == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS_order, display="species", select =which (include==TRUE & flying == TRUE), cex=0.6, col="white", fill="black")
#add legend
legend(1.7,1.45, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
plot(NMDS_order, disp='sites', type="n")
#add ellipsoids with ordiellipse
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="jar"), pch=17, col="#009E73")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="sticky"), pch=25, col="#CC79A7")
#add legend
legend(1.7,1.45, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
#add insect taxa as text
ordilabel(NMDS_order, display="species", select =which (include==TRUE & crawling == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS_order, display="species", select =which (include==TRUE & flying == TRUE), cex=0.6, col="white", fill="black")
#add legend
legend(2.1,1.45, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
plot(NMDS_order, disp='sites', type="n")
#add ellipsoids with ordiellipse
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="jar"), pch=17, col="#009E73")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="sticky"), pch=25, col="#CC79A7")
#add legend
legend(2.1,1.45, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
#add insect taxa as text
ordilabel(NMDS_order, display="species", select =which (include==TRUE & crawling == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS_order, display="species", select =which (include==TRUE & flying == TRUE), cex=0.6, col="white", fill="black")
taxa <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Functional%20taxa.csv")
taxa_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Order%20taxa.csv")
crawling<-read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/crawling.csv")
#flying vs crawling
#input data
flying<-read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/flying.csv")
pitfall_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_pitfall_order.csv",na.strings = NULL)
ramp_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_yellowramp_order.csv",na.strings = NULL)
jar_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_jarramp_order.csv",na.strings = NULL)
sticky_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_stickycard_order.csv",na.strings = NULL)
taxa_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Order%20taxa.csv")
#add trap type as a column on each data file
pitfall_order$Trap="pitfall"
ramp_order$Trap="ramp"
jar_order$Trap="jar"
sticky_order$Trap="sticky"
#combine order data tables
library (plyr)
pitfallramp_order <- rbind.fill (pitfall_order, ramp_order)
pitfallrampjar_order <-rbind.fill (pitfallramp_order, jar_order)
insects_order <- rbind.fill (pitfallrampjar_order, sticky_order)
#############
#NMDS of insect community by order between trap types
library (vegan)
#Create matrix of environmental variables
env.matrix_order<-insects_order[c(1:3,16)]
#create matrix of community variables
com.matrix_order<-insects_order[c(4:15)]
#ordination by NMDS
NMDS_order<-metaMDS(com.matrix_order, distance="bray", k=2, autotransform=FALSE, trymax=100)
stressplot(NMDS_order)
#stress=0.14
#order NMDS visualization
#what taxa to display using "taxa"
flying<-as.vector(t(taxa_order[1,]))
flying<-flying[-1]
crawling<-as.vector(t(taxa_order[2,]))
crawling<-crawling[-1]
include<-as.vector(t(taxa_order[3,]))
include<-include[-1]
#plot order NMDS
plot(NMDS_order, disp='sites', type="n")
#add ellipsoids with ordiellipse
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="jar"), pch=17, col="#009E73")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="sticky"), pch=25, col="#CC79A7")
#add legend
legend(2.1,1.45, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
#add insect taxa as text
ordilabel(NMDS_order, display="species", select =which (include==TRUE & crawling == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS_order, display="species", select =which (include==TRUE & flying == TRUE), cex=0.6, col="white", fill="black")
#bootstrapping and testing for differences between the groups (traps)
fit<-adonis(com.matrix_order ~ Trap, data = env.matrix_order, permutations = 999, method="bray")
fit
#P-value = 0.001
#check assumption of homogeneity of multivariate dispersion
#P-value greater than 0.05 means assumption has been met
distances_data<-vegdist(com.matrix_order)
anova(betadisper(distances_data, env.matrix_order$Trap))
#P-value = 0.005918 -- cannot assume homogeneity of multivariate dispersion
pitfall <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_pitfall_functional.csv",na.strings = NULL)
ramp <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_yellowramp_functional.csv",na.strings = NULL)
jar <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_jarramp_functional.csv",na.strings = NULL)
sticky <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_stickycard_functional.csv",na.strings = NULL)
taxa <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Functional%20taxa.csv")
#add trap type as a column on each data file
pitfall$Trap="pitfall"
ramp$Trap="ramp"
jar$Trap="jar"
sticky$Trap="sticky"
#combine data tables
library (plyr)
pitfallramp <- rbind.fill (pitfall, ramp)
pitfallrampjar <-rbind.fill (pitfallramp, jar)
insects <- rbind.fill (pitfallrampjar, sticky)
#############
#NMDS of insect community by functional classification between trap types
library (vegan)
#Create matrix of environmental variables
env.matrix<-insects[c(1:3,43)]
#create matrix of community variables
com.matrix<-insects[c(4:42)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100)
stressplot(NMDS)
#stress=0.15
#functional classification NMDS visualization
#what taxa to display using "taxa"
flying<-as.vector(t(taxa[1,]))
flying<-flying[-1]
crawling<-as.vector(t(taxa[2,]))
crawling<-crawling[-1]
include<-as.vector(t(taxa[3,]))
include<-include[-1]
#plot functional NMDS
plot(NMDS, disp='sites', type="n")
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$Trap=="jar"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS, display="sites", select=which(env.matrix$Trap=="sticky"), pch=25, col="#CC79A7")
#add legend
legend(1.46,1.45, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
#add insect taxa as text
ordilabel(NMDS, display="species", select =which (include==TRUE & crawling == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS, display="species", select =which (include==TRUE & flying == TRUE), cex=0.6, col="white", fill="black")
###########
library(ggplot2)
library(lme4)
library(lmerTest) #to obtain p values
library (emmeans) #for pairwise comparisons
library (multcompView) #to view letters
#Mush order plots together
library(ggpubr)
#flying vs crawling
#input data
flying<-read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/flying.csv")
View(flying)
#calculating abundance for flying
flying.abun <- rowSums(flying[,2:30])
flying$abundance <- flying.abun
#calculating abundance for crawling
crawling.abun <- rowSums(crawling[,2:9])
crawling$abundance <- crawling.abun
#calculating richness for flying
flying.rich <- rowSums(flying[,2:30]>0)
flying$richness <- flying.rich
#calculating richness for crawling
crawling.rich <- rowSums(crawling[,2:9]>0)
crawling$richness <- crawling.rich
#abundance model for flying arthropods
#AIC = 1855
abundance.model_flying<-lm(abundance ~ Trap, data=flying)
summary(abundance.model_flying)
anova(abundance.model_flying)
AIC(abundance.model_flying)
#pairwise comparison
abun_f.emm<-emmeans(abundance.model_flying,pairwise~Trap)
abun_f.emm
abun_f.cld<-multcomp::cld(abun_f.emm, alpha = 0.05, Letters = LETTERS)
abun_f.cld
#abundance model for crawling arthropods
#AIC = 1443
abundance.model_crawling<-lm(abundance ~ Trap, data=crawling)
summary(abundance.model_crawling)
anova(abundance.model_crawling)
AIC(abundance.model_crawling)
flying.abun <- rowSums(flying[,2:30])
flying$abundance <- flying.abun
#calculating abundance for crawling
crawling.abun <- rowSums(crawling[,2:9])
crawling$abundance <- crawling.abun
#calculating richness for flying
flying.rich <- rowSums(flying[,2:30]>0)
flying$richness <- flying.rich
#calculating richness for crawling
crawling.rich <- rowSums(crawling[,2:9]>0)
crawling$richness <- crawling.rich
#############
#NMDS of insect community by functional classification between trap types
library (vegan)
flying.abun <- rowSums(flying[,2:30])
flying$abundance <- flying.abun
#calculating abundance for crawling
crawling.abun <- rowSums(crawling[,2:9])
crawling$abundance <- crawling.abun
#calculating richness for flying
flying.rich <- rowSums(flying[,2:30]>0)
flying$richness <- flying.rich
#calculating richness for crawling
crawling.rich <- rowSums(crawling[,2:9]>0)
crawling$richness <- crawling.rich
crawling<-read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/crawling.csv")
#calculating abundance for flying
flying.abun <- rowSums(flying[,2:30])
flying$abundance <- flying.abun
#calculating abundance for crawling
crawling.abun <- rowSums(crawling[,2:9])
crawling$abundance <- crawling.abun
#calculating richness for flying
flying.rich <- rowSums(flying[,2:30]>0)
flying$richness <- flying.rich
#calculating richness for crawling
crawling.rich <- rowSums(crawling[,2:9]>0)
crawling$richness <- crawling.rich
#abundance model for flying arthropods
#AIC = 1855
abundance.model_flying<-lm(abundance ~ Trap, data=flying)
summary(abundance.model_flying)
anova(abundance.model_flying)
AIC(abundance.model_flying)
#pairwise comparison
abun_f.emm<-emmeans(abundance.model_flying,pairwise~Trap)
abun_f.emm
abun_f.cld<-multcomp::cld(abun_f.emm, alpha = 0.05, Letters = LETTERS)
abun_f.cld
#abundance model for crawling arthropods
#AIC = 1443
abundance.model_crawling<-lm(abundance ~ Trap, data=crawling)
summary(abundance.model_crawling)
anova(abundance.model_crawling)
AIC(abundance.model_crawling)
#pairwise comparison
abun_c.emm<-emmeans(abundance.model_crawling,pairwise~Trap)
abun_c.emm
abun_c.cld<-multcomp::cld(abun_c.emm, alpha = 0.05, Letters = LETTERS)
abun_c.cld
#richness model for flying arthropods
#AIC = 660
richness.model_flying<-lm(richness ~ Trap, data=flying)
summary(richness.model_flying)
anova(richness.model_flying)
AIC(richness.model_flying)
#pairwise comparison
rich_f.emm<-emmeans(richness.model_flying,pairwise~Trap)
rich_f.emm
rich_f.cld<-multcomp::cld(rich_f.emm, alpha = 0.05, Letters = LETTERS)
rich_f.cld
#richness model for crawling arthropods
#AIC = 486
richness.model_crawling<-lm(richness ~ Trap, data=crawling)
summary(richness.model_crawling)
anova(richness.model_crawling)
AIC(richness.model_crawling)
#pairwise comparison
rich_c.emm<-emmeans(richness.model_crawling,pairwise~Trap)
rich_c.emm
rich_c.cld<-multcomp::cld(rich_c.emm, alpha = 0.05, Letters = LETTERS)
rich_c.cld
##plot flying abundance
abundance.plot_flying<-ggplot(flying, aes(x =Trap, y = abundance, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="Flying", x="", y="Abundance (log10)")+
scale_y_continuous(trans="log10")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=abun_f.cld, aes(y = 600, label = .group))
abundance.plot_flying
##plot crawling abundance
abundance.plot_crawling<-ggplot(crawling, aes(x =Trap, y = abundance, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="Ground-crawling", x="", y="")+
scale_y_continuous(trans="log10")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=abun_c.cld, aes(y = 600, label = .group))
abundance.plot_crawling
##plot flying richness
richness.plot_flying<-ggplot(flying, aes(x =Trap, y = richness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="", x="", y="Richness")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=rich_f.cld, aes(y = 15, label = .group))
richness.plot_flying
##plot crawling richness
richness.plot_crawling<-ggplot(crawling, aes(x =Trap, y = richness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="", x="", y="")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=rich_c.cld, aes(y = 15, label = .group))
richness.plot_crawling
#mush together
figure4 <- ggarrange(abundance.plot_flying, abundance.plot_crawling,richness.plot_flying,richness.plot_crawling,
labels = c("A", "B", "C", "D"),
ncol = 2, nrow = 2,
common.legend = TRUE, legend = "bottom")
figure4
pdf("Figure 4.pdf", height=6, width=8) #height and width in inches
figure4
dev.off()
