ramp <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_yellowramp_functional.csv",na.strings = NULL)
jar <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_jarramp_functional.csv",na.strings = NULL)
sticky <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_stickycard_functional.csv",na.strings = NULL)
taxa <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Functional%20taxa.csv")
#add trap type as a column on each data file
pitfall$Trap="pitfall"
ramp$Trap="ramp"
jar$Trap="jar"
sticky$Trap="sticky"
#combine data tables
library (plyr)
pitfallramp <- rbind.fill (pitfall, ramp)
pitfallrampjar <-rbind.fill (pitfallramp, jar)
insects <- rbind.fill (pitfallrampjar, sticky)
#############
#NMDS of insect community by functional classification between trap types
library (vegan)
#Create matrix of environmental variables
env.matrix<-insects[c(1:3,43)]
#create matrix of community variables
com.matrix<-insects[c(4:42)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100)
stressplot(NMDS)
#stress=0.15
#functional classification NMDS visualization
#what taxa to display using "taxa"
flying<-as.vector(t(taxa[1,]))
flying<-flying[-1]
crawling<-as.vector(t(taxa[2,]))
crawling<-crawling[-1]
include<-as.vector(t(taxa[3,]))
include<-include[-1]
#plot functional NMDS
#10x12
plot(NMDS, disp='sites', type="n")
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$Trap=="jar"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS, display="sites", select=which(env.matrix$Trap=="sticky"), pch=25, col="#CC79A7")
#add legend
#legend(1.0,1.51, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
#add insect taxa as text
ordilabel(NMDS, display="species", select =which (include==TRUE & crawling == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS, display="species", select =which (include==TRUE & flying == TRUE), cex=0.6, col="white", fill="black")
#bootstrapping and testing for differences between the groups (traps)
fit<-adonis(com.matrix ~ Trap, data = env.matrix, permutations = 999, method="bray")
fit
#P-value = 0.001
#check assumption of homogeneity of multivariate dispersion
#P-value greater than 0.05 means assumption has been met
distances_data<-vegdist(com.matrix)
anova(betadisper(distances_data, env.matrix$Trap))
#P-value = .0001 -- cannot assume homogeneity of multivariate dispersion
################
#calculate Abundance
insects.abun <- rowSums(insects[,4:42])
insects$abundance <- insects.abun
#calculate Richness
insects.rowsums <- rowSums(insects[,4:42]>0)
insects$richness <- insects.rowsums
#calculate Shannon diversity
diversity <-diversity(insects[,4:42])
insects$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(insects[,4:42]))
insects$evenness <- evenness
#######
#Mixed effects models
library(lme4)
library(lmerTest) #to obtain p values
library (emmeans) #for pairwise comparisons
library (multcompView) #to view letters
#richness
##AIC 718
richness.model<-lmer(richness ~ Trap + Date + (1 | Site), data=insects)
summary(richness.model)
anova(richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~Trap)
rich.emm
#results: jar-pitfall no sig diff (0.0610), sig dif btw all others
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
#abundance
##AIC 1795
abundance.model<-lmer(abundance ~ Trap + Date + (1 | Site), data=insects)
summary(abundance.model)
anova(abundance.model)
AIC(abundance.model)
#pairwise comparison
abun.emm<-emmeans(abundance.model,pairwise~Trap)
abun.emm
#results: jar-pitfall no sig diff (0.8089), sig dif btw all others
abun.cld<-multcomp::cld(abun.emm, alpha = 0.05, Letters = LETTERS)
abun.cld
#diversity
##AIC 175 (152 w/o Date)
diversity.model<-lmer(diversity ~ Trap + Date + (1 | Site), data=insects)
summary(diversity.model)
anova(diversity.model)
AIC(diversity.model)
#pairwise comparison
div.emm<-emmeans(diversity.model,pairwise~Trap)
div.emm
#results: no sig diff btw jar-pitfall (0.2016), jar-sticky (0.9540), pitfall-sticky (0.0661); sig diff btw all others
div.cld<-multcomp::cld(div.emm, alpha = 0.05, Letters = LETTERS)
div.cld
#evenness
##AIC -172 (-193 w/o Date)
evenness.model<-lmer(evenness ~ Trap + Date + (1 | Site), data=insects)
summary(evenness.model)
anova(evenness.model)
AIC(evenness.model)
#pairwise comparison
even.emm<-emmeans(evenness.model,pairwise~Trap)
even.emm
#results: no sig diff btw jar-pitfall (0.2851) or ramp-sticky (0.0974); sig diff btw all others
even.cld<-multcomp::cld(even.emm, alpha = 0.05, Letters = LETTERS)
even.cld
###########
library(ggplot2)
#abundance plot
abundance.plot<-ggplot(insects, aes(x =Trap, y = abundance, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(x="", y="")+
scale_y_continuous(trans="log10")+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=abun.cld, aes(y = 600, label = .group))
abundance.plot
#richness plot
richness.plot<-ggplot(insects, aes(x =Trap, y = richness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(x="", y="")+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=rich.cld, aes(y = 25, label = .group))
richness.plot
#diversity plot
diversity.plot<-ggplot(insects, aes(x =Trap, y = diversity, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(x="", y="")+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=div.cld, aes(y = 2.5, label = .group))
diversity.plot
#evenness plot
evenness.plot<-ggplot(insects, aes(x =Trap, y = evenness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(x="", y="")+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=even.cld, aes(y = 1.2, label = .group))
evenness.plot
#Mush order plots together
pitfall.com.matrix<-pitfall[c(4:42)]
pitfall_curve<-accumresult(pitfall.com.matrix, method = "exact", permutations = 1000)
jar.com.matrix<-jar[c(4:42)]
jar_curve<-accumresult(jar.com.matrix, method = "exact", permutations = 1000)
ramp.com.matrix<-ramp[c(4:42)]
ramp_curve<-accumresult(ramp.com.matrix, method = "exact", permutations = 1000)
sticky.com.matrix<-sticky[c(4:42)]
sticky_curve<-accumresult(sticky.com.matrix, method = "exact", permutations = 1000)
#calculates species richness for each sample
specnumber(com.matrix) #ranges from 1 to 17
#calculates species richness by treatment (trap)
specnumber(com.matrix, groups = insects$Trap) #jar=26; pitfall=21; ramp=35; sticky=31
#total richness and jackknife
rich <- diversityresult(com.matrix, y=NULL, index = "richness")
rich # 39
j1 <- diversityresult(com.matrix, y=NULL, index = "jack1")
j1 # 43.969697
#89%
j2 <- diversityresult(com.matrix, y=NULL, index = "jack2")
j2 # 44.98167
#jar jackknife; richness = 26
j1.j <- diversityresult(jar.com.matrix, y=NULL, index = "jack1")
j1.j # 32.833333
#79%
j2.j <- diversityresult(jar.com.matrix, y=NULL, index = "jack2")
j2.j # 35.783391
#pitfall jackknife; richness = 21
j1.p <- diversityresult(pitfall.com.matrix, y=NULL, index = "jack1")
j1.p # 24.897436
#84%
j2.p <- diversityresult(pitfall.com.matrix, y=NULL, index = "jack2")
j2.p # 25.921053
#ramp jackknife; richness = 35
j1.r <- diversityresult(ramp.com.matrix, y=NULL, index = "jack1")
j1.r # 41.833333
#84%
j2.r <- diversityresult(ramp.com.matrix, y=NULL, index = "jack2")
j2.r # 46.641696
#sticky jackknife; richness = 31
j1.s <- diversityresult(sticky.com.matrix, y=NULL, index = "jack1")
j1.s # 36.857143
#84%
j2.s <- diversityresult(sticky.com.matrix, y=NULL, index = "jack2")
j2.s # 39.783972
#BiodiversityR::accumcomp
Accum.1_functional <- accumcomp(com.matrix, y=env.matrix, factor='Trap',
method='random', conditioned=FALSE, plotit=FALSE)
Accum.1_functional
#BiodiversityR::accumcomp.long
accum.long1_functional <- accumcomp.long(Accum.1_functional, ci=NA, label.freq=5)
head(accum.long1_functional)
#plot
#empty canvas
BioR.theme <- theme(
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.line = element_line("gray25"),
text = element_text(size = 12),
axis.text = element_text(size = 10, colour = "gray25"),
axis.title = element_text(size = 14, colour = "gray25"),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.key = element_blank())
functional_accum <- ggplot(data=accum.long1_functional, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR)) +
scale_x_continuous(expand=c(0, 1), sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_color_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
scale_shape_manual(values=c(19,17,15,25))+
geom_line(aes(colour=Grouping), size=0.1) +
geom_ribbon(aes(colour=Grouping, fill=after_scale(alpha(colour, 0.3))),
show.legend=FALSE, linetype = 0) +
geom_point(data=subset(accum.long1_functional, labelit==TRUE),
aes(colour=Grouping, shape=Grouping), size=3) +
BioR.theme +
labs(x = "", y = "", colour = "Trap", shape = "Trap")
functional_accum
pitfall_beetle <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/2020%20beetles_pitfall.csv",na.strings = NULL)
ramp_beetle <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/2020%20beetles_yellowramp.csv",na.strings = NULL)
jar_beetle <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/2020%20beetles_jarramp.csv",na.strings = NULL)
sticky_beetle <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/2020%20beetles_stickycard.csv",na.strings = NULL)
taxa_beetle <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/beetle%20taxa.csv")
#add trap type as a column on each data file
pitfall_beetle$Trap="pitfall"
ramp_beetle$Trap="ramp"
jar_beetle$Trap="jar"
sticky_beetle$Trap="sticky"
#combine beetle data tables
library (plyr)
pitfallramp_beetle <- rbind.fill (pitfall_beetle, ramp_beetle)
pitfallrampjar_beetle <-rbind.fill (pitfallramp_beetle, jar_beetle)
beetle <- rbind.fill (pitfallrampjar_beetle, sticky_beetle)
#############
#NMDS of beetle community between trap types
library (vegan)
#Create matrix of environmental variables
env.matrix_beetle<-beetle[c(1:3,19)]
#create matrix of community variables
com.matrix_beetle<-beetle[c(4:18)]
#ordination by NMDS
NMDS_beetle<-metaMDS(com.matrix_beetle, distance="bray", k=2, autotransform=FALSE, trymax=100)
stressplot(NMDS_beetle)
#stress= "nearly zero"
#INSUFFICENT DATA
#beetle NMDS visualization
#what taxa to display using "taxa"
#most.abund<-as.vector(t(taxa[1,]))#greater than 100 caught
#most.abund<-most.abund[-1]
#bioind<-as.vector(t(taxa[2,]))
#bioind<-bioind[-1]
flying<-as.vector(t(taxa_beetle[1,]))
flying<-flying[-1]
crawling<-as.vector(t(taxa_beetle[2,]))
crawling<-crawling[-1]
include<-as.vector(t(taxa_beetle[3,]))
include<-include[-1]
#plot beetle NMDS
plot(NMDS_beetle, disp='sites', type="n")
#add ellipsoids with ordiellipse
ordiellipse(NMDS_beetle, env.matrix_beetle$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS_beetle, env.matrix_beetle$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
ordiellipse(NMDS_beetle, env.matrix_beetle$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS_beetle, env.matrix_beetle$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS_beetle, display="sites", select=which(env.matrix_beetle$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS_beetle, display="sites", select=which(env.matrix_beetle$Trap=="jar"), pch=17, col="#009E73")
points(NMDS_beetle, display="sites", select=which(env.matrix_beetle$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS_beetle, display="sites", select=which(env.matrix_beetle$Trap=="sticky"), pch=25, col="#CC79A7")
#add legend
#legend(1.5,1.5, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
#add taxa as text
ordilabel(NMDS_beetle, display="species", select =which (include==TRUE & crawling == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS_beetle, display="species", select =which (include==TRUE & flying == TRUE), cex=0.6, col="white", fill="black")
#bootstrapping and testing for differences between the groups (traps)
fit<-adonis(com.matrix_beetle ~ Trap, data = env.matrix_beetle, permutations = 999, method="bray")
fit
#P-value = 0.003
#check assumption of homogeneity of multivariate dispersion
#P-value greater than 0.05 means assumption has been met
distances_data<-vegdist(com.matrix_beetle)
anova(betadisper(distances_data, env.matrix_beetle$Trap))
#P-value = 0.7987 --- assumes homogeneity
################
#calculate beetle Abundance
insects.abun_beetle <- rowSums(beetle[,4:18])
beetle$abundance <- insects.abun_beetle
#calculate beetle Richness
insects.rowsums_beetle <- rowSums(beetle[,4:18]>0)
beetle$richness <- insects.rowsums_beetle
#calculate beetle Shannon diversity
diversity_beetle <-diversity(beetle[,4:18])
beetle$diversity <-diversity_beetle
#calculate beetle Evenness
evenness_beetle <-diversity_beetle/log(specnumber(beetle[,4:18]))
beetle$evenness <- evenness_beetle
#######
#Mixed effects models
library(lme4)
library(lmerTest) #to obtain p values
library (emmeans) #for pairwise comparisons
library (multcompView) #to view letters
#beetle richness
##AIC 77
richness.model_beetle<-lmer(richness ~ Trap + Date + (1 | Site), data=beetle)
summary(richness.model_beetle)
anova(richness.model_beetle)
AIC(richness.model_beetle)
#pairwise comparison
rich.emm_beetle<-emmeans(richness.model_beetle,pairwise~Trap)
rich.emm_beetle
#results:
rich.cld_beetle<-multcomp::cld(rich.emm_beetle, alpha = 0.05, Letters = LETTERS)
rich.cld_beetle
#beetle abundance
##AIC 77
abundance.model_beetle<-lmer(abundance ~ Trap + Date + (1 | Site), data=beetle)
summary(abundance.model_beetle)
anova(abundance.model_beetle)
AIC(abundance.model_beetle)
#pairwise comparison
abun.emm_beetle<-emmeans(abundance.model_beetle,pairwise~Trap)
abun.emm_beetle
#results:
abun.cld_beetle<-multcomp::cld(abun.emm_beetle, alpha = 0.05, Letters = LETTERS)
abun.cld_beetle
#beetle diversity
##AIC 54 (40 w/o date)
diversity.model_beetle<-lmer(diversity ~ Trap + Date + (1 | Site), data=beetle)
summary(diversity.model_beetle)
anova(diversity.model_beetle)
AIC(diversity.model_beetle)
#pairwise comparison
div.emm_beetle<-emmeans(diversity.model_beetle,pairwise~Trap)
div.emm_beetle
#results:
div.cld_beetle<-multcomp::cld(div.emm_beetle, alpha = 0.05, Letters = LETTERS)
div.cld_beetle
#beetle evenness
##AIC -193 (-411 w/o date)
evenness.model_beetle<-lmer(evenness ~ Trap + Date + (1 | Site), data=beetle)
summary(evenness.model_beetle)
anova(evenness.model_beetle)
AIC(evenness.model_beetle)
#pairwise comparison
even.emm_beetle<-emmeans(evenness.model_beetle,pairwise~Trap)
even.emm_beetle
#results:
even.cld_beetle<-multcomp::cld(even.emm_beetle, alpha = 0.05, Letters = LETTERS)
even.cld_beetle
###########
library(ggplot2)
#beetle abundance plot
abundance.plot_beetle<-ggplot(beetle, aes(x =Trap, y = abundance, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(x="", y="")+
scale_y_continuous(trans="log10")+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=abun.cld_beetle, aes(y = 600, label = .group))
abundance.plot_beetle
#beetle richness plot
richness.plot_beetle<-ggplot(beetle, aes(x =Trap, y = richness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(x="", y="")+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=rich.cld_beetle, aes(y = 25, label = .group))
richness.plot_beetle
#beetle diversity plot
diversity.plot_beetle<-ggplot(beetle, aes(x =Trap, y = diversity, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(x="", y="")+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=div.cld_beetle, aes(y = 2.5, label = .group))
diversity.plot_beetle
#beetle evenness plot
evenness.plot_beetle<-ggplot(beetle, aes(x =Trap, y = evenness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(x="", y="")+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=even.cld_beetle, aes(y = 1.2, label = .group))
evenness.plot_beetle
pitfall.com.matrix<-pitfall_beetle[c(4:18)]
pitfall_curve<-accumresult(pitfall.com.matrix, method = "exact", permutations = 1000)
jar.com.matrix<-jar_beetle[c(4:18)]
jar_curve<-accumresult(jar.com.matrix, method = "exact", permutations = 1000)
ramp.com.matrix<-ramp_beetle[c(4:18)]
ramp_curve<-accumresult(ramp.com.matrix, method = "exact", permutations = 1000)
sticky.com.matrix<-sticky_beetle[c(4:18)]
sticky_curve<-accumresult(sticky.com.matrix, method = "exact", permutations = 1000)
#calculates species richness for each sample
specnumber(com.matrix_beetle) #ranges from 1 to 3
#calculates species richness by treatment (trap)
specnumber(com.matrix_beetle, groups = beetle$Trap) #jar=3; pitfall=3; ramp=8; sticky=9
#total richness and jackknife
rich <- diversityresult(com.matrix_beetle, y=NULL, index = "richness")
rich # 15
j1 <- diversityresult(com.matrix_beetle, y=NULL, index = "jack1")
j1 # 18.878788
#79%
j2 <- diversityresult(com.matrix_beetle, y=NULL, index = "jack2")
j2 # 18.996212
#jar jackknife; richness = 3
j1.j <- diversityresult(jar.com.matrix, y=NULL, index = "jack1")
j1.j # 3.8333333
#78%
j2.j <- diversityresult(jar.com.matrix, y=NULL, index = "jack2")
j2.j #3.9666667
#pitfall jackknife; richness = 3
j1.p <- diversityresult(pitfall.com.matrix, y=NULL, index = "jack1")
j1.p # 3.8333333
#78%
j2.p <- diversityresult(pitfall.com.matrix, y=NULL, index = "jack2")
j2.p # 3.9666667
#ramp jackknife; richness = 8
j1.r <- diversityresult(ramp.com.matrix, y=NULL, index = "jack1")
j1.r # 11.555556
#69%
j2.r <- diversityresult(ramp.com.matrix, y=NULL, index = "jack2")
j2.r # 13.305556
#sticky jackknife; richness = 9
j1.s <- diversityresult(sticky.com.matrix, y=NULL, index = "jack1")
j1.s # 11.75
#77%
j2.s <- diversityresult(sticky.com.matrix, y=NULL, index = "jack2")
j2.s # 11.219697
#BiodiversityR::accumcomp
Accum.1_beetle <- accumcomp(com.matrix_beetle, y=env.matrix_beetle, factor='Trap',
method='random', conditioned=FALSE, plotit=FALSE)
Accum.1_beetle
#BiodiversityR::accumcomp.long
accum.long1_beetle <- accumcomp.long(Accum.1_beetle, ci=NA, label.freq=5)
head(accum.long1_beetle)
#plot
#empty canvas
BioR.theme <- theme(
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid = element_blank(),
axis.line = element_line("gray25"),
text = element_text(size = 12),
axis.text = element_text(size = 10, colour = "gray25"),
axis.title = element_text(size = 14, colour = "gray25"),
legend.title = element_text(size = 14),
legend.text = element_text(size = 14),
legend.key = element_blank())
beetle_accum <- ggplot(data=accum.long1_beetle, aes(x = Sites, y = Richness, ymax = UPR, ymin = LWR)) +
scale_x_continuous(expand=c(0, 1), sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
scale_color_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
scale_shape_manual(values=c(19,17,15,25))+
geom_line(aes(colour=Grouping), size=0.1) +
geom_ribbon(aes(colour=Grouping, fill=after_scale(alpha(colour, 0.3))),
show.legend=FALSE, linetype = 0) +
geom_point(data=subset(accum.long1_beetle, labelit==TRUE),
aes(colour=Grouping, shape=Grouping), size=3) +
BioR.theme +
labs(x = "Number of samples", y = "", colour = "Trap", shape = "Trap")
beetle_accum
figure5 <- ggarrange(order_accum, functional_accum, beetle_accum,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3,
common.legend = TRUE, legend = "bottom")
figure5
#a - order
library(ggpubr)
figure5 <- ggarrange(order_accum, functional_accum, beetle_accum,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3,
common.legend = TRUE, legend = "bottom")
figure5
