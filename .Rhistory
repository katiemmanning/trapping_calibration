labs(x = "Number of samples", y = "", colour = "Trap", shape = "Trap")
beetle_accum
pdf("beetle_accum.pdf", height=6, width=8) #height and width in inches
beetle_accum
dev.off()
library(ggvegan)
pdf("Figure 4.pdf", height=9, width=7)
par(mfrow=c(3,1), mar=c(4.1, 4.8, 1.5, 8.1),xpd=TRUE)
plot(NMDS_order, disp='sites', type='n')
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="jar"), pch=17, col="#009E73")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="sticky"), pch=25, col="#CC79A7")
ordilabel(NMDS_order, display="species", select =which (include_order==TRUE & crawling_order == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS_order, display="species", select =which (include_order==TRUE & flying_order == TRUE), cex=0.6, col="white", fill="black")
legend(2.8,1.35, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
text(-4, 0.95, "A", cex=2)
plot(NMDS, disp='sites', type='n')
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
points(NMDS, display="sites", select=which(env.matrix$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$Trap=="jar"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS, display="sites", select=which(env.matrix$Trap=="sticky"), pch=25, col="#CC79A7")
ordilabel(NMDS, display="species", select =which (include_func==TRUE & crawling_func == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS, display="species", select =which (include_func==TRUE & flying_func == TRUE), cex=0.6, col="white", fill="black")
ordilabel(NMDS, display="species", select =which (include_func==TRUE & intermediate_func == TRUE), cex=0.6, col="black", fill="gray")
text(-4.1, 1, "B", cex=2)
plot(NMDS_beetle, disp='sites', type='n')
ordiellipse(NMDS_beetle, env.matrix_beetle$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS_beetle, env.matrix_beetle$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS_beetle, env.matrix_beetle$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS_beetle, env.matrix_beetle$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
points(NMDS_beetle, display="sites", select=which(env.matrix_beetle$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS_beetle, display="sites", select=which(env.matrix_beetle$Trap=="jar"), pch=17, col="#009E73")
points(NMDS_beetle, display="sites", select=which(env.matrix_beetle$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS_beetle, display="sites", select=which(env.matrix_beetle$Trap=="sticky"), pch=25, col="#CC79A7")
ordilabel(NMDS_beetle, display="species", select =which (include_beetle==TRUE & crawling_beetle == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS_beetle, display="species", select =which (include_beetle==TRUE & flying_beetle == TRUE), cex=0.6, col="white", fill="black")
ordilabel(NMDS_beetle, display="species", select =which (include_beetle==TRUE & intermediate_beetle == TRUE), cex=0.6, col="black", fill="grey")
text(-10.5, 3.3, "C", cex=2)
dev.off()
library(ggpubr)
orderfigure <- ggarrange(richness.plot_order, abundance.plot_order, diversity.plot_order, evenness.plot_order,
ncol = 4, nrow = 1)
orderfigure
#b - functional
functionalfigure <- ggarrange(richness.plot, abundance.plot, diversity.plot, evenness.plot,
ncol = 4, nrow = 1)
functionalfigure
#c - beetle
beetlefigure <- ggarrange(richness.plot_beetle, abundance.plot_beetle, diversity.plot_beetle, evenness.plot_beetle,
ncol = 4, nrow = 1,
common.legend = TRUE, legend = "bottom")
beetlefigure
figure5 <- ggarrange(orderfigure, functionalfigure, beetlefigure,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3,
common.legend = TRUE, legend = "bottom")
pdf("Figure 5.pdf", height=10, width=15) #height and width in inches
figure5
dev.off()
figure5
figure6 <- ggarrange(abundance.plot_flying, abundance.plot_crawling,abundance.plot_intermediate,richness.plot_flying,richness.plot_crawling,richness.plot_intermediate,
labels = c("A", "B", "C", "D", "E", "F"),
ncol = 3, nrow = 2,
common.legend = TRUE, legend = "bottom")
figure6
pdf("Figure 6.pdf", height=6, width=8) #height and width in inches
figure6
dev.off()
figure7 <- ggarrange(order_accum, functional_accum, beetle_accum,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3,
common.legend = TRUE, legend = "bottom")
figure7
pdf("Figure 7.pdf", height=6, width=6) #height and width in inches
figure7
dev.off()
#Supplementary figure 1 - trap size vs mean catch
#bring in data
size <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Supp%20fig%201%20data.csv",na.strings = NULL)
View(size)
#abundance model for flying arthropods
#AIC = 1260
abundance.model_flying<-glm(abundance ~ Trap, data=flying,family = negative.binomial(2.5))
summary(abundance.model_flying)
anova(abundance.model_flying)
AIC(abundance.model_flying)
#pairwise comparison
abun_f.emm<-emmeans(abundance.model_flying,pairwise~Trap)
abun_f.emm
anova(abundance.model_flying)
AIC(abundance.model_flying)
#pairwise comparison
abun_f.emm<-emmeans(abundance.model_flying,pairwise~Trap)
abun_f.emm
#results: no diff btw jar-pitfall and ramp-sticky
abun_f.cld<-multcomp::cld(abun_f.emm, alpha = 0.05, Letters = LETTERS)
abun_f.cld
#abundance model for crawling arthropods
#AIC = 1073
abundance.model_crawling<-glm(abundance ~ Trap, data=crawling,family = negative.binomial(2))
summary(abundance.model_crawling)
anova(abundance.model_crawling)
AIC(abundance.model_crawling)
#pairwise comparison
abun_c.emm<-emmeans(abundance.model_crawling,pairwise~Trap)
abun_c.emm
#abundance model for intermediate arthropods
#AIC = 1118
abundance.model_intermediate<-glm(abundance ~ Trap, data=intermediate, family = negative.binomial(0.9))
summary(abundance.model_intermediate)
anova(abundance.model_intermediate)
AIC(abundance.model_intermediate)
#pairwise comparison
abun_i.emm<-emmeans(abundance.model_intermediate,pairwise~Trap)
abun_i.emm
#richness model for flying arthropods
#AIC = 591
richness.model_flying<-lm(richness ~ Trap, data=flying)
summary(richness.model_flying)
anova(richness.model_flying)
AIC(richness.model_flying)
#pairwise comparison
rich_f.emm<-emmeans(richness.model_flying,pairwise~Trap)
rich_f.emm
#results: diff btw all
rich_f.cld<-multcomp::cld(rich_f.emm, alpha = 0.05, Letters = LETTERS)
rich_f.cld
#richness model for crawling arthropods
#AIC = 447
richness.model_crawling<-lm(richness ~ Trap, data=crawling)
summary(richness.model_crawling)
anova(richness.model_crawling)
AIC(richness.model_crawling)
#pairwise comparison
rich_c.emm<-emmeans(richness.model_crawling,pairwise~Trap)
rich_c.emm
#pairwise comparison
rich_c.emm<-emmeans(richness.model_crawling,pairwise~Trap)
rich_c.emm
#results: no diff btw jar-pitfall
rich_c.cld<-multcomp::cld(rich_c.emm, alpha = 0.05, Letters = LETTERS)
rich_c.cld
#richness model for intermediate arthropods
#AIC = 438
richness.model_intermediate<-lm(richness ~ Trap, data=intermediate)
summary(richness.model_intermediate)
anova(richness.model_intermediate)
AIC(richness.model_intermediate)
#pairwise comparison
rich_i.emm<-emmeans(richness.model_intermediate,pairwise~Trap)
rich_i.emm
#results: no diff btw jar-pitfall or jar-sticky
rich_i.cld<-multcomp::cld(rich_i.emm, alpha = 0.05, Letters = LETTERS)
rich_i.cld
#pairwise comparison
abun_i.emm<-emmeans(abundance.model_intermediate,pairwise~Trap)
abun_i.emm
#results: diff btw all
abun_i.cld<-multcomp::cld(abun_i.emm, alpha = 0.05, Letters = LETTERS)
abun_i.cld
#pairwise comparison
abun_c.emm<-emmeans(abundance.model_crawling,pairwise~Trap)
abun_c.emm
#results: no diff btw jar-pitfall and pitfall-sticky
abun_c.cld<-multcomp::cld(abun_c.emm, alpha = 0.05, Letters = LETTERS)
abun_c.cld
#pairwise comparison
abun_f.emm<-emmeans(abundance.model_flying,pairwise~Trap)
abun_f.emm
#results: no diff btw jar-pitfall and ramp-sticky
abun_f.cld<-multcomp::cld(abun_f.emm, alpha = 0.05, Letters = LETTERS)
abun_f.cld
#pairwise comparison
rich_c.emm<-emmeans(richness.model_crawling,pairwise~Trap)
rich_c.emm
#results: no diff btw jar-pitfall
rich_c.cld<-multcomp::cld(rich_c.emm, alpha = 0.05, Letters = LETTERS)
rich_c.cld
#pairwise comparison
rich_i.emm<-emmeans(richness.model_intermediate,pairwise~Trap)
rich_i.emm
#results: no diff btw jar-pitfall or jar-sticky
rich_i.cld<-multcomp::cld(rich_i.emm, alpha = 0.05, Letters = LETTERS)
rich_i.cld
##plot flying abundance
abundance.plot_flying<-ggplot(flying, aes(x =Trap, y = abundance, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="Flying", x="", y="Abundance (log10)")+
scale_y_continuous(trans="log10")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=abun_f.cld, aes(y = 600, label = .group))
abundance.plot_flying
##plot crawling abundance
abundance.plot_crawling<-ggplot(crawling, aes(x =Trap, y = abundance, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="Crawling", x="", y="")+
scale_y_continuous(trans="log10")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=abun_c.cld, aes(y = 600, label = .group))
abundance.plot_crawling
##plot intermediate abundance
abundance.plot_intermediate<-ggplot(intermediate, aes(x =Trap, y = abundance, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="Intermediate", x="", y="")+
scale_y_continuous(trans="log10")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=abun_i.cld, aes(y = 600, label = .group))
abundance.plot_intermediate
##plot flying richness
richness.plot_flying<-ggplot(flying, aes(x =Trap, y = richness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="", x="", y="Richness")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=rich_f.cld, aes(y = 15, label = .group))
richness.plot_flying
##plot crawling richness
richness.plot_crawling<-ggplot(crawling, aes(x =Trap, y = richness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="", x="", y="")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=rich_c.cld, aes(y = 15, label = .group))
richness.plot_crawling
##plot intermediate richness
richness.plot_intermediate<-ggplot(intermediate, aes(x =Trap, y = richness, fill=Trap))+
geom_boxplot()+
theme_bw()+
theme(legend.position ="NULL")+
theme(axis.text.x=element_blank())+
labs(title="", x="", y="")+
theme (plot.title = element_text(hjust=0.5))+
scale_fill_manual(values=c("#009E73","#E69F00","#F0E442","#CC79A7"))+
geom_text(data=rich_i.cld, aes(y = 15, label = .group))
richness.plot_intermediate
#mush together
mobility <- ggarrange(abundance.plot_flying,abundance.plot_crawling,abundance.plot_intermediate,richness.plot_flying,richness.plot_crawling,richness.plot_intermediate,
labels = c("A", "B", "C", "D", "E", "F"),
ncol = 3, nrow = 2,
common.legend = TRUE, legend = "bottom")
mobility
pdf("mobility_box plot.pdf", height=6, width=8) #height and width in inches
mobility
dev.off()
pitfall_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_pitfall_order.csv",na.strings = NULL)
ramp_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_yellowramp_order.csv",na.strings = NULL)
jar_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_jarramp_order.csv",na.strings = NULL)
sticky_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_stickycard_order.csv",na.strings = NULL)
taxa_order <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Order%20taxa.csv")
#add trap type as a column on each data file
pitfall_order$Trap="pitfall"
ramp_order$Trap="ramp"
jar_order$Trap="jar"
sticky_order$Trap="sticky"
#combine order data tables
library (plyr)
pitfallramp_order <- rbind.fill (pitfall_order, ramp_order)
pitfallrampjar_order <-rbind.fill (pitfallramp_order, jar_order)
insects_order <- rbind.fill (pitfallrampjar_order, sticky_order)
str(insects_order) #trap is listed as character
insects_order$Trap <- as.factor(insects_order$Trap)
str(insects_order) #now trap is listed as a factor
#############
#NMDS of insect community by order between trap types
library (vegan)
#Create matrix of environmental variables
env.matrix_order<-insects_order[c(1:4,17)]
#create matrix of community variables
com.matrix_order<-insects_order[c(5:16)]
#ordination by NMDS
NMDS_order<-metaMDS(com.matrix_order, distance="bray", k=2, autotransform=FALSE, trymax=100)
NMDS_order
stressplot(NMDS_order)
#stress=0.14
#order NMDS visualization
#what taxa to display using "taxa"
flying_order<-as.vector(t(taxa_order[1,]))
flying_order<-flying_order[-1]
crawling_order<-as.vector(t(taxa_order[2,]))
crawling_order<-crawling_order[-1]
include_order<-as.vector(t(taxa_order[3,]))
include_order<-include_order[-1]
#plot order NMDS
plot(NMDS_order, disp='sites', type="n")
title(main="Order", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS_order, env.matrix_order$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="jar"), pch=17, col="#009E73")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS_order, display="sites", select=which(env.matrix_order$Trap=="sticky"), pch=25, col="#CC79A7")
#add legend
legend(1.13,1.43, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
#add insect taxa as text
ordilabel(NMDS_order, display="species", select =which (include_order==TRUE & crawling_order == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS_order, display="species", select =which (include_order==TRUE & flying_order == TRUE), cex=0.6, col="white", fill="black")
#bootstrapping and testing for differences between the groups (traps)
fit<-adonis(com.matrix_order ~ Trap, data = env.matrix_order, permutations = 999, method="bray")
fit
#P-value = 0.001
#check assumption of homogeneity of multivariate dispersion
#P-value greater than 0.05 means assumption has been met
distances_data<-vegdist(com.matrix_order)
anova(betadisper(distances_data, env.matrix_order$Trap))
#P-value = 0.006 -- cannot assume homogeneity of multivariate dispersion
################
#calculate order Abundance
insects.abun_order <- rowSums(insects_order[,5:16])
insects_order$abundance <- insects.abun_order
#calculate order Richness
insects.rowsums_order <- rowSums(insects_order[,5:16]>0)
insects_order$richness <- insects.rowsums_order
#calculate order Shannon diversity
diversity_order <-diversity(insects_order[,5:16])
insects_order$diversity <-diversity_order
#calculate order Evenness
evenness_order <-diversity_order/log(specnumber(insects_order[,5:16]))
insects_order$evenness <- evenness_order
#######
#Mixed effects models
library(lme4)
library(lmerTest) #to obtain p values
library (emmeans) #for pairwise comparisons
library (multcompView) #to view letters
#order richness
#AIC 559
richness.model_order<-lmer(richness ~ Trap + Date + (1 | Site:Replicate), data=insects_order)
summary(richness.model_order)
anova(richness.model_order)
AIC(richness.model_order)
#pairwise comparison
rich.emm_order<-emmeans(richness.model_order,pairwise~Trap)
rich.emm_order
#results: no sig diff btw jar-pitfall (0.0527)
rich.cld_order<-multcomp::cld(rich.emm_order, alpha = 0.05, Letters = LETTERS)
rich.cld_order
abundance.model_order<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=insects_order, family = negative.binomial (4))
summary(abundance.model_order)
anova(abundance.model_order)
AIC(abundance.model_order)
#pairwise comparison
abun.emm_order<-emmeans(abundance.model_order,pairwise~Trap)
abun.emm_order
#results: sig btw all
abun.cld_order<-multcomp::cld(abun.emm_order, alpha = 0.05, Letters = LETTERS)
abun.cld_order
anova(richness.model_order)
#order diversity
##AIC 132
#Date is not significant
diversity.model_order<-lmer(diversity ~ Trap + Date + (1 | Site:Replicate), data=insects_order)
summary(diversity.model_order)
anova(diversity.model_order)
evenness.model_order<-lmer(evenness ~ Trap + Date + (1 | Site:Replicate), data=insects_order)
summary(evenness.model_order)
anova(evenness.model_order)
AIC(evenness.model_order)
anova(diversity.model_order)
anova(abundance.model_order)
pitfall <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_pitfall_functional.csv",na.strings = NULL)
ramp <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_yellowramp_functional.csv",na.strings = NULL)
jar <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_jarramp_functional.csv",na.strings = NULL)
sticky <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Insect%20ID%202020_stickycard_functional.csv",na.strings = NULL)
taxa <- read.csv("https://raw.githubusercontent.com/katiemmanning/trapping_calibration/main/Data/Functional%20taxa.csv")
#add trap type as a column on each data file
pitfall$Trap="pitfall"
ramp$Trap="ramp"
jar$Trap="jar"
sticky$Trap="sticky"
#combine data tables
library (plyr)
pitfallramp <- rbind.fill (pitfall, ramp)
pitfallrampjar <-rbind.fill (pitfallramp, jar)
insects <- rbind.fill (pitfallrampjar, sticky)
str(insects) #trap is listed as character
insects$Trap <- as.factor(insects$Trap)
str(insects) #now trap is listed as a factor
#############
#NMDS of insect community by functional classification between trap types
library (vegan)
#Create matrix of environmental variables
env.matrix<-insects[c(1:4,44)]
#create matrix of community variables
com.matrix<-insects[c(5:43)]
#ordination by NMDS
NMDS<-metaMDS(com.matrix, distance="bray", k=2, autotransform=FALSE, trymax=100)
NMDS
stressplot(NMDS)
#stress=0.15
#functional classification NMDS visualization
#what taxa to display using "taxa"
flying_func<-as.vector(t(taxa[1,]))
flying_func<-flying_func[-1]
crawling_func<-as.vector(t(taxa[2,]))
crawling_func<-crawling_func[-1]
intermediate_func<-as.vector(t(taxa[3,]))
intermediate_func<-intermediate_func[-1]
include_func<-as.vector(t(taxa[4,]))
include_func<-include_func[-1]
#plot functional NMDS
plot(NMDS, disp='sites', type="n")
title(main="Functional", adj = 0.01, line = -2, cex.main=2.5)
#add ellipsoids with ordiellipse
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#E69F00",kind="sd", conf=0.95, label=FALSE, show.groups = "pitfall")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#009E73",kind="sd", conf=0.95, label=FALSE, show.groups = "jar")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#F0E442",kind="sd", conf=0.95, label=FALSE, show.groups = "ramp")
ordiellipse(NMDS, env.matrix$Trap, draw="polygon", col="#CC79A7",kind="sd", conf=0.95, label=FALSE, show.groups = "sticky")
#display ground trap data as solid shapes - pitfall=circle, ramp trap=square, jar=triangle, flying trap as triangle outline
points(NMDS, display="sites", select=which(env.matrix$Trap=="pitfall"),pch=19, col="#E69F00")
points(NMDS, display="sites", select=which(env.matrix$Trap=="jar"), pch=17, col="#009E73")
points(NMDS, display="sites", select=which(env.matrix$Trap=="ramp"), pch=15, col="#F0E442")
points(NMDS, display="sites", select=which(env.matrix$Trap=="sticky"), pch=25, col="#CC79A7")
#add legend
#legend(1.0,1.51, title=NULL, pch=c(19,17,15,25), col=c("#E69F00","#009E73","#F0E442","#CC79A7"), cex=.7, legend=c("Pitfall", "Jar ramp", "Yellow ramp", "Yellow sticky card"))
#add insect taxa as text
ordilabel(NMDS, display="species", select =which (include_func==TRUE & crawling_func == TRUE), cex=0.6, col="black", fill="white")
ordilabel(NMDS, display="species", select =which (include_func==TRUE & flying_func == TRUE), cex=0.6, col="white", fill="black")
ordilabel(NMDS, display="species", select =which (include_func==TRUE & intermediate_func == TRUE), cex=0.6, col="black", fill="gray")
#bootstrapping and testing for differences between the groups (traps)
fit<-adonis(com.matrix ~ Trap, data = env.matrix, permutations = 999, method="bray")
fit
#P-value = 0.001
#check assumption of homogeneity of multivariate dispersion
#P-value greater than 0.05 means assumption has been met
distances_data<-vegdist(com.matrix)
anova(betadisper(distances_data, env.matrix$Trap))
#P-value = .0001 -- cannot assume homogeneity of multivariate dispersion
################
#calculate Abundance
insects.abun <- rowSums(insects[,5:43])
insects$abundance <- insects.abun
#calculate Richness
insects.rowsums <- rowSums(insects[,5:43]>0)
insects$richness <- insects.rowsums
#calculate Shannon diversity
diversity <-diversity(insects[,5:43])
insects$diversity <-diversity
#calculate Evenness
evenness <-diversity/log(specnumber(insects[,5:43]))
insects$evenness <- evenness
#######
#Mixed effects models
library(lme4)
library(lmerTest) #to obtain p values
library (emmeans) #for pairwise comparisons
library (multcompView) #to view letters
#richness
##AIC 721
richness.model<-lmer(richness ~ Trap + Date + (1 | Site:Replicate), data=insects)
summary(richness.model)
anova(richness.model)
AIC(richness.model)
#pairwise comparison
rich.emm<-emmeans(richness.model,pairwise~Trap)
rich.emm
#results: jar-pitfall no sig diff (0.0594), sig dif btw all others
rich.cld<-multcomp::cld(rich.emm, alpha = 0.05, Letters = LETTERS)
rich.cld
anova(richness.model)
#abundance
##AIC 1530
abundance.model<-glmer(abundance ~ Trap + Date + (1 | Site:Replicate), data=insects, family = negative.binomial(4.3))
summary(abundance.model)
anova(abundance.model)
#pairwise comparison
abun.emm<-emmeans(abundance.model,pairwise~Trap)
abun.emm
#results: sig dif btw all
abun.cld<-multcomp::cld(abun.emm, alpha = 0.05, Letters = LETTERS)
abun.cld
#diversity
##AIC 157
#date is not significant
diversity.model<-lmer(diversity ~ Trap + (1 | Site:Replicate), data=insects)
summary(diversity.model)
anova(diversity.model)
#evenness
##AIC -189
evenness.model<-lmer(evenness ~ Trap + (1 | Site:Replicate), data=insects)
summary(evenness.model)
anova(evenness.model)
